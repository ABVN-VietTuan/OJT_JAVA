sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/routing/History","sap/m/MessageBox","sap/m/MessageToast"],function(e,t,o,n){"use strict";let a;return e.extend("frontend.controller.DetailEmployee",{onInit:function(){const e=this.getOwnerComponent().getRouter();e.getRoute("DetailEmployee").attachPatternMatched(this._onRouteMatched,this)},_onRouteMatched:function(e){const t=this.getView();const o=this.getOwnerComponent().getModel("employee");a=e.getParameter("arguments").employeeId;console.log("EmployeeId",a);t.bindElement({path:`/Employees(${a})`,model:"employee",parameters:{$expand:"role,department"},events:{change:this._onBindingChange.bind(this)}})},_onBindingChange:function(){const e=this.getView();const t=e.getElementBinding("employee");if(!t.getBoundContext()){n.show("Employee not found.");this.onNavBack()}},onCalculateSalary:async function(){try{const e=this.getView();const t=e.getModel("employee");const o=t.bindContext("/calculateSalary(...)");o.setParameter("employeeId",a);await o.invoke();const s=o.getBoundContext().getObject();const i=s.value;console.log("Calculated Salary:",i);const l=e.getBindingContext("employee");if(l){l.setProperty("salary",i)}n.show("Calculated Salary: $"+i)}catch(e){console.error("Salary calculation failed:",e);o.error("Failed to calculate salary.")}},onNavBack:function(){const e=t.getInstance();const o=e.getPreviousHash();if(o!==undefined){window.history.go(-1)}else{this.getOwnerComponent().getRouter().navTo("ListEmployee",{},true)}},onEditEmployee:async function(){const e=this.getView();const t=e.getModel("employee");const a=e.getBindingContext("employee");if(!a){n.show("No binding context available for editing.");return}try{const e=this.byId("firstName").getValue().trim();const o=this.byId("lastName").getValue().trim();const s=this.byId("email").getValue().trim();const i=this.byId("gender").getSelectedKey();const l=this.byId("role").getSelectedKey();const r=this.byId("department").getSelectedKey();const c=this.byId("dob").getDateValue();const d=this.byId("hireDate").getDateValue();const g=c?c.toISOString().split("T")[0]:null;const y=d?d.toISOString().split("T")[0]:null;console.log("Check gender",i);const m="$auto";a.setProperty("firstName",e,m);a.setProperty("lastName",o,m);a.setProperty("email",s,m);a.setProperty("gender",i,m);a.setProperty("role_ID",l,m);a.setProperty("department_ID",r,m);a.setProperty("dateOfBirth",g);a.setProperty("hireDate",y);await t.submitBatch(m);n.show("Employee updated successfully.",{width:"15em",my:"center bottom",at:"center bottom",of:window,offset:"0 0",collision:"fit fit",onClose:null,autoClose:true,animationTimingFunction:"ease",animationDuration:1e3,closeOnBrowserNavigation:true});this.getOwnerComponent().getRouter().navTo("ListEmployee")}catch(e){console.error("Update failed:",e);o.error("Failed to update employee. Please check console for details.")}}})});
//# sourceMappingURL=DetailEmployee.controller.js.map