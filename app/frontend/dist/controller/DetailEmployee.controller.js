sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/routing/History","sap/m/MessageBox","sap/m/MessageToast"],function(e,t,o,n){"use strict";return e.extend("frontend.controller.DetailEmployee",{onInit:function(){console.log("hello");const e=this.getOwnerComponent().getRouter();e.getRoute("DetailEmployee").attachPatternMatched(this._onRouteMatched,this);const t=this.getOwnerComponent().getModel("user");console.log(t);const o=new sap.ui.model.json.JSONModel({isAdmin:false});this.getView().setModel(o,"ui");const n=t.getData();console.log("User model data:",n);const s=n?.scopes&&n?.scopes.some(e=>e.includes("Admin"));console.log("Check isAdmin detail",s);this.getView().getModel("ui").setProperty("/isAdmin",s);this.byId("editbtn").setVisible(s)},_onRouteMatched:function(e){const t=this.getView();const o=this.getOwnerComponent().getModel("employee");const n=e.getParameter("arguments").employeeId;t.bindElement({path:`/Employees(${n})`,model:"employee",parameters:{$expand:"role,department"},events:{change:this._onBindingChange.bind(this)}})},_onBindingChange:function(){const e=this.getView();const t=e.getElementBinding("employee");if(!t.getBoundContext()){n.show("Employee not found.");this.onNavBack()}},onCalculateSalary:function(){const e=this.getView().getModel("employee");const t=this.getView().getBindingContext("employee");const o=t.getProperty("ID");e.callFunction("/calculateSalary",{method:"POST",urlParameters:{employeeId:o},success:function(e){n.show("Calculated Salary: $$"+e.value)},error:function(){n.show("Failed to calculate salary.")}})},onNavBack:function(){const e=t.getInstance();const o=e.getPreviousHash();if(o!==undefined){window.history.go(-1)}else{this.getOwnerComponent().getRouter().navTo("ListEmployee",{},true)}},onEditEmployee:async function(){const e=this.getView();const t=e.getModel("employee");const s=e.getBindingContext("employee");if(!s){n.show("No binding context available for editing.");return}try{const e=this.byId("firstName").getValue().trim();const o=this.byId("lastName").getValue().trim();const i=this.byId("email").getValue().trim();const a=this.byId("gender").getSelectedKey();const l=this.byId("role").getSelectedKey();const r=this.byId("department").getSelectedKey();const c=this.byId("dob").getDateValue();const d=this.byId("hireDate").getDateValue();const g=c?c.toISOString().split("T")[0]:null;const m=d?d.toISOString().split("T")[0]:null;console.log("Check gender",a);const u="$auto";s.setProperty("firstName",e,u);s.setProperty("lastName",o,u);s.setProperty("email",i,u);s.setProperty("gender",a,u);s.setProperty("role_ID",l,u);s.setProperty("department_ID",r,u);s.setProperty("dateOfBirth",g);s.setProperty("hireDate",m);await t.submitBatch(u);n.show("Employee updated successfully.",{width:"15em",my:"center bottom",at:"center bottom",of:window,offset:"0 0",collision:"fit fit",onClose:null,autoClose:true,animationTimingFunction:"ease",animationDuration:1e3,closeOnBrowserNavigation:true});this.getOwnerComponent().getRouter().navTo("ListEmployee")}catch(e){console.error("Update failed:",e);o.error("Failed to update employee. Please check console for details.")}}})});
//# sourceMappingURL=DetailEmployee.controller.js.map