//@ui5-bundle frontend/Component-preload.js
sap.ui.require.preload({
	"frontend/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","frontend/model/models"],(e,t)=>{"use strict";return e.extend("frontend.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"frontend/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("frontend.controller.App",{onInit(){}})});
},
	"frontend/controller/CreateEmployee.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/routing/History","sap/m/MessageBox","sap/m/MessageToast"],(e,t,o,a)=>{"use strict";return e.extend("frontend.controller.CreateEmployee",{onInit(){const e=new sap.ui.model.json.JSONModel({firstName:"",lastName:"",email:"",gender:"",dateOfBirth:"",hireDate:"",role_ID:"",department_ID:""});this.getView().setModel(e,"newEmployee")},onNavBack:function(){console.log("hello");const e=t.getInstance();const o=e.getPreviousHash();if(o!==undefined){window.history.go(-1)}else{this.getOwnerComponent().getRouter().navTo("ListEmployee",{},true)}},onCreateEmployee:async function(){const e=this.getView().getModel("newEmployee");const t=e.getData();if(t.dateOfBirth instanceof Date){t.dateOfBirth=t.dateOfBirth.toISOString().split("T")[0]}if(t.hireDate instanceof Date){t.hireDate=t.hireDate.toISOString().split("T")[0]}console.log(t);const n=this.getView().getModel("employee");if(!t.firstName||!t.lastName||!t.email){o.warning("Please fill in First Name, Last Name, and Email.");return}try{const e=n.bindList("/Employees");const o=e.create(t);await o.created();console.log("check");a.show("Employee created successfully!",{width:"15em",my:"center center",at:"center center",of:window,offset:"0 0",collision:"fit fit",onClose:null,autoClose:true,animationTimingFunction:"ease",animationDuration:1e3,closeOnBrowserNavigation:true});this.getOwnerComponent().getRouter().navTo("ListEmployee")}catch(e){console.error("Create failed:",e);o.error("Failed to create employee. Please try again.")}},onCalculateSalary:async function(){try{const e=this.getView();const t=e.getModel("newEmployee").getData();const o=t.ID||t.id;const n=oModel.bindContext("/calculateSalary(...)",undefined,{$select:"value"});await n.setParameter("employeeId",o);await n.execute();const i=n.getBoundContext().getObject();e.getModel("newEmployee").setProperty("/salary",i.value);a.show("Salary calculated: $$"+i.value)}catch(e){console.error("Salary calculation failed:",e);o.error("Failed to calculate salary.")}}})});
},
	"frontend/controller/DetailEmployee.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/routing/History","sap/m/MessageBox","sap/m/MessageToast"],function(e,t,o,n){"use strict";return e.extend("frontend.controller.DetailEmployee",{onInit:function(){console.log("hello");const e=this.getOwnerComponent().getRouter();e.getRoute("DetailEmployee").attachPatternMatched(this._onRouteMatched,this);const t=this.getOwnerComponent().getModel("user");console.log(t);const o=new sap.ui.model.json.JSONModel({isAdmin:false});this.getView().setModel(o,"ui");const n=t.getData();console.log("User model data:",n);const s=n?.scopes&&n?.scopes.some(e=>e.includes("Admin"));console.log("Check isAdmin detail",s);this.getView().getModel("ui").setProperty("/isAdmin",s);this.byId("editbtn").setVisible(s)},_onRouteMatched:function(e){const t=this.getView();const o=this.getOwnerComponent().getModel("employee");const n=e.getParameter("arguments").employeeId;t.bindElement({path:`/Employees(${n})`,model:"employee",parameters:{$expand:"role,department"},events:{change:this._onBindingChange.bind(this)}})},_onBindingChange:function(){const e=this.getView();const t=e.getElementBinding("employee");if(!t.getBoundContext()){n.show("Employee not found.");this.onNavBack()}},onCalculateSalary:function(){const e=this.getView().getModel("employee");const t=this.getView().getBindingContext("employee");const o=t.getProperty("ID");e.callFunction("/calculateSalary",{method:"POST",urlParameters:{employeeId:o},success:function(e){n.show("Calculated Salary: $$"+e.value)},error:function(){n.show("Failed to calculate salary.")}})},onNavBack:function(){const e=t.getInstance();const o=e.getPreviousHash();if(o!==undefined){window.history.go(-1)}else{this.getOwnerComponent().getRouter().navTo("ListEmployee",{},true)}},onEditEmployee:async function(){const e=this.getView();const t=e.getModel("employee");const s=e.getBindingContext("employee");if(!s){n.show("No binding context available for editing.");return}try{const e=this.byId("firstName").getValue().trim();const o=this.byId("lastName").getValue().trim();const i=this.byId("email").getValue().trim();const a=this.byId("gender").getSelectedKey();const l=this.byId("role").getSelectedKey();const r=this.byId("department").getSelectedKey();const c=this.byId("dob").getDateValue();const d=this.byId("hireDate").getDateValue();const g=c?c.toISOString().split("T")[0]:null;const m=d?d.toISOString().split("T")[0]:null;console.log("Check gender",a);const u="$auto";s.setProperty("firstName",e,u);s.setProperty("lastName",o,u);s.setProperty("email",i,u);s.setProperty("gender",a,u);s.setProperty("role_ID",l,u);s.setProperty("department_ID",r,u);s.setProperty("dateOfBirth",g);s.setProperty("hireDate",m);await t.submitBatch(u);n.show("Employee updated successfully.",{width:"15em",my:"center bottom",at:"center bottom",of:window,offset:"0 0",collision:"fit fit",onClose:null,autoClose:true,animationTimingFunction:"ease",animationDuration:1e3,closeOnBrowserNavigation:true});this.getOwnerComponent().getRouter().navTo("ListEmployee")}catch(e){console.error("Update failed:",e);o.error("Failed to update employee. Please check console for details.")}}})});
},
	"frontend/controller/ListEmployee.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageBox","sap/m/MessageToast"],(e,t,o)=>{"use strict";return e.extend("frontend.controller.ListEmployee",{onInit(){let e;const t=this.getOwnerComponent().getRouter();t.getRoute("ListEmployee").attachPatternMatched(this._onRouteMatched,this);const o=this.getOwnerComponent().getModel("user");console.log(o);e=o.getData();console.log("User model data:",e);const n=e?.scopes&&e?.scopes.some(e=>e.includes("Admin"));console.log("Check is Admin",n);this.byId("submitBtn").setVisible(n);this.byId("deleteBtn").setVisible(n)},_onRouteMatched:function(){const e=this.byId("employeeTable");const t=e.getBinding("items");if(t){t.refresh()}},onRowPress:function(e){const t=e.getParameter("listItem");const o=t.getBindingContext("employee");const n=encodeURIComponent(o.getProperty("ID"));console.log("hello",n);const s=this.getOwnerComponent().getRouter();s.navTo("DetailEmployee",{employeeId:n})},onAddEmployee:function(){const e=this.getOwnerComponent().getRouter();e.navTo("CreateEmployee")},onRemoveEmployee:async function(e){const n=e.getSource();const s=n.getParent();const i=s.getBindingContext("employee");if(!i){t.error("Unable to determine the selected employee.");return}const l=await new Promise(e=>{t.confirm("Are you sure you want to delete this employee?",{title:"Confirm Delete",actions:[t.Action.YES,t.Action.NO],onClose:o=>e(o===t.Action.YES)})});if(!l){return}try{await i.delete();o.show("Employee deleted successfully.")}catch(e){console.error("Delete failed:",e);t.error("Failed to delete employee.")}}})});
},
	"frontend/i18n/i18n.properties":'# This is the resource bundle for frontend\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=App Title\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=App Title',
	"frontend/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"frontend","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.1","toolsId":"4db0fbe4-b722-4050-92ee-b747204c1917"},"dataSources":{"mainService":{"uri":"/odata/v4/admin/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":false,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"frontend.i18n.i18n"}},"employee":{"dataSource":"mainService","type":"sap.ui.model.odata.v4.ODataModel","preload":true,"settings":{"serviceUrl":"/odata/v4/admin/","operationMode":"Server","autoExpandSelect":true,"earlyRequests":true,"groupId":"$auto","updateGroupId":"$auto"}},"user":{"type":"sap.ui.model.json.JSONModel","uri":"/user-api/currentUser"}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"frontend.view","async":true,"viewPath":"frontend.view"},"routes":[{"name":"ListEmployee","pattern":":?query:","target":["ListEmployee"]},{"pattern":"DetailEmployee/{employeeId}","name":"DetailEmployee","target":"DetailEmployee"},{"pattern":"CreateEmployee","name":"CreateEmployee","target":"CreateEmployee"}],"targets":{"ListEmployee":{"id":"ListEmployee","name":"ListEmployee"},"DetailEmployee":{"name":"DetailEmployee","id":"DetailEmployee","level":2},"CreateEmployee":{"name":"CreateEmployee","id":"CreateEmployee"}}},"rootView":{"viewName":"frontend.view.App","type":"XML","id":"App","async":true}},"sap.cloud":{"public":true,"service":"OJT_JAVA_2"}}',
	"frontend/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
},
	"frontend/view/App.view.xml":'<mvc:View controllerName="frontend.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"frontend/view/CreateEmployee.view.xml":'<mvc:View\n    controllerName="frontend.controller.CreateEmployee"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:layout="sap.ui.layout"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:tnt="sap.tnt"\n><Page\n        id="CreateEmployeePage"\n        title="Create Employee"\n        showNavButton="true"\n        navButtonPress=".onNavBack"\n    ><f:SimpleForm\n            id="createEmployeeForm"\n            editable="true"\n            layout="ResponsiveGridLayout"\n            labelSpanXL="3"\n            labelSpanL="3"\n            labelSpanM="4"\n            labelSpanS="12"\n            adjustLabelSpan="false"\n            emptySpanXL="1"\n            emptySpanL="1"\n            emptySpanM="0"\n            columnsXL="2"\n            columnsL="2"\n            columnsM="1"\n        ><Label text="First Name" /><Input value="{newEmployee>/firstName}" placeholder="Enter First Name" /><Label text="Last Name" /><Input value="{newEmployee>/lastName}" placeholder="Enter Last Name" /><Label text="Email" /><Input value="{newEmployee>/email}" type="Email" placeholder="example@domain.com" /><Label text="Gender" /><Select selectedKey="{newEmployee>/gender}"><items><core:Item key="Male" text="Male" /><core:Item key="Female" text="Female" /><core:Item key="Other" text="Other" /></items></Select><Label text="Date of Birth" /><DatePicker value="{newEmployee>/dateOfBirth}" displayFormat="yyyy-MM-dd" valueFormat="yyyy-MM-dd" placeholder="yyyy-MM-dd" /><Label text="Hire Date" /><DatePicker value="{newEmployee>/hireDate}" displayFormat="yyyy-MM-dd" valueFormat="yyyy-MM-dd" placeholder="yyyy-MM-dd" /><Label text="Role" /><ComboBox\n                items="{employee>/Roles}"\n                selectedKey="{newEmployee>/role_ID}"\n                placeholder="Select Role"\n            ><core:Item key="{employee>ID}" text="{employee>name}" /></ComboBox><Label text="Department" /><ComboBox\n                items="{employee>/Departments}"\n                selectedKey="{newEmployee>/department_ID}"\n                placeholder="Select Department"\n            ><core:Item key="{employee>ID}" text="{employee>name}" /></ComboBox><Label text="Salary (USD)" /><Text text="{newEmployee>/salary}" /></f:SimpleForm><footer><Toolbar><ToolbarSpacer /><Button\n                    text="Calculate Salary"\n                    icon="sap-icon://money-bills"\n                    press=".onCalculateSalary"\n                    visible="{= ${userModel>/role} === \'Admin\' }"\n                /><Button\n                    text="Save"\n                    type="Emphasized"\n                    icon="sap-icon://add"\n                    press=".onCreateEmployee"\n                /></Toolbar></footer></Page></mvc:View>\n',
	"frontend/view/DetailEmployee.view.xml":'<mvc:View\n    controllerName="frontend.controller.DetailEmployee"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:layout="sap.ui.layout"\n    xmlns:f="sap.ui.layout.form"\n><Page\n        id="DetailEmployeePage"\n        title="Employee Details"\n        showNavButton="true"\n        navButtonPress=".onNavBack"\n    ><f:SimpleForm\n            id="employeeForm"\n            editable="true"\n            layout="ResponsiveGridLayout"\n            labelSpanXL="3"\n            labelSpanL="3"\n            labelSpanM="4"\n            labelSpanS="12"\n            adjustLabelSpan="false"\n            emptySpanXL="1"\n            emptySpanL="1"\n            emptySpanM="0"\n            columnsXL="2"\n            columnsL="2"\n            columnsM="1"\n        ><Label text="First Name" /><Input\n                editable="{ui>/isAdmin}"\n                id="firstName"\n                value="{employee>firstName}"\n            /><Label text="Last Name" /><Input\n                editable="{ui>/isAdmin}"\n                id="lastName"\n                value="{employee>lastName}"\n            /><Label text="Email" /><Input\n                editable="{ui>/isAdmin}"\n                id="email"\n                value="{employee>email}"\n                type="Email"\n            /><Label text="Gender" /><Select\n                editable="{ui>/isAdmin}"\n                id="gender"\n                selectedKey="{employee>gender}"\n            ><items><core:Item\n                        key="Male"\n                        text="Male"\n                    /><core:Item\n                        key="Female"\n                        text="Female"\n                    /><core:Item\n                        key="Other"\n                        text="Other"\n                    /></items></Select><Label text="Date of Birth" /><DatePicker\n                editable="{ui>/isAdmin}"\n                id="dob"\n                value="{employee>dateOfBirth}"\n                displayFormat="yyyy-MM-dd"\n                valueFormat="yyyy-MM-dd"\n                placeholder="yyyy-MM-dd"\n            /><Label text="Hire Date" /><DatePicker\n                editable="{ui>/isAdmin}"\n                id="hireDate"\n                value="{employee>hireDate}"\n                displayFormat="yyyy-MM-dd"\n                valueFormat="yyyy-MM-dd"\n                placeholder="yyyy-MM-dd"\n            /><Label text="Role" /><ComboBox\n                editable="{ui>/isAdmin}"\n                id="role"\n                items="{employee>/Roles}"\n                selectedKey="{employee>role_ID}"\n                placeholder="Select Role"\n            ><core:Item\n                    key="{employee>ID}"\n                    text="{employee>name}"\n                /></ComboBox><Label text="Department" /><ComboBox\n                editable="{ui>/isAdmin}"\n                id="department"\n                items="{employee>/Departments}"\n                selectedKey="{employee>department_ID}"\n                placeholder="Select Department"\n            ><core:Item\n                    key="{employee>ID}"\n                    text="{employee>name}"\n                /></ComboBox><Label text="Salary (USD)" /><Text text="{employee>salary}" /></f:SimpleForm><footer><Toolbar><ToolbarSpacer /><Button\n                    text="Calculate Salary"\n                    icon="sap-icon://money-bills"\n                    press=".onCalculateSalary"\n                    visible="{= ${userModel>/role} === \'Admin\' }"\n                /><Button\n                    visible="{user>/isAdmin}"\n                    id="editbtn"\n                    text="Save"\n                    type="Emphasized"\n                    icon="sap-icon://save"\n                    press=".onEditEmployee"\n                /></Toolbar></footer></Page></mvc:View>\n',
	"frontend/view/ListEmployee.view.xml":'<mvc:View\n    controllerName="frontend.controller.ListEmployee"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"\n    xmlns:l="sap.ui.layout"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:tnt="sap.tnt"\n    xmlns:u="sap.ui.unified"\n><Page\n        id="EmployeeList"\n        title="Employee"\n        showHeader="false"\n    ><tnt:ToolHeader\n            class="header"\n            height="3rem"\n        ><HBox class="header_left"><Image\n                    src="images/Logo.png"\n                    width="32px"\n                    height="32px"\n                /><Text\n                    text="Abeam Consulting"\n                    class="header_text sapUiTinyMarginBegin sapUiTinyMarginEnd"\n                    wrapping="false"\n                /></HBox><ToolbarSpacer /><Button\n                type="Transparent"\n                icon="sap-icon://form"\n                text="Input Form"\n                press=".onEmployeePress"\n                class="sapUiTinyMarginEnd"\n            /><Button\n                type="Transparent"\n                icon="sap-icon://employee"\n                text="Employee List"\n                press=".onEmployeeListPress"\n            /></tnt:ToolHeader><VBox class="employeeList_body"><Table\n                alternateRowColors="true"\n                id="employeeTable"\n                mode="SingleSelectMaster"\n                itemPress=".onRowPress"\n                growing="true"\n                growingThreshold="10"\n                items="{\n                    path: \'employee>/Employees\',\n                    parameters: {\n                        $expand: \'department,role\'\n                    }\n                }"\n            ><columns><Column hAlign="Center"><Text text="Department" /></Column><Column hAlign="Center" width="15rem"><Text text="Name" /></Column><Column hAlign="Center" width="20rem"><Text text="Email" /></Column><Column hAlign="Center" width="8rem"><Text text="Role" /></Column><Column hAlign="Center" width="8rem"><Text text="Gender" /></Column><Column hAlign="Center" width="8rem"><Text text="Date Of Birth" /></Column><Column hAlign="Center" width="8rem"><Text text="Hire Date" /></Column><Column hAlign="Center" width="8rem"><Text text="Salary" /></Column><Column hAlign="Center"><Text text="" /></Column></columns><items><ColumnListItem type="Navigation"><cells><Text text="{employee>department/name}" /><Text\n                                text="{employee>firstName} {employee>lastName}"\n                            /><Text text="{employee>email}" /><Text text="{employee>role/name}" /><Text text="{employee>gender}" /><Text text="{employee>dateOfBirth}" /><Text text="{employee>hireDate}" /><Text text="{employee>salary}" /><Button\n                                id="deleteBtn"\n                                class="btn"\n                                press=".onRemoveEmployee"\n                                icon="sap-icon://delete"\n                                visible="false"\n                            /></cells></ColumnListItem></items></Table></VBox><footer><Toolbar><ToolbarSpacer /><Button\n                    id="submitBtn"\n                    class="body_submit"\n                    icon="sap-icon://add-employee"\n                    text="Add new Employee"\n                    press=".onAddEmployee"\n                    visible="false"\n                /></Toolbar></footer></Page></mvc:View>\n'
});
//# sourceMappingURL=Component-preload.js.map
